version: '3.8'

services:
  # Fastapi Service
  fastapi_app:
    build: ./code
    container_name: fastapi_app_container
    ports:
      - "8000:8000"
    restart: unless-stopped

  # Prometheus Service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_container
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped

  # Grafana Service
  grafana:
    image: grafana/grafana-oss:10.4.2
    container_name: grafana_container
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
      - jaeger
    restart: unless-stopped

  # Loki Service
  loki:
    image: grafana/loki:latest
    container_name: loki_container
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  # Promtail Service
  promtail:
    image: grafana/promtail:latest
    container_name: promtail_container
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./loki/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped

  # Jaeger Service
  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: jaeger_container
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    environment:
      - SPAN_STORAGE_TYPE=badger
    volumes:
      - jaeger_data:/badger
    restart: unless-stopped

volumes:
  prometheus_data: {}
  grafana_data: {}
  loki_data: {}
  jaeger_data: {}
